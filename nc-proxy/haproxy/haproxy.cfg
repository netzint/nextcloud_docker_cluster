global
        #log /dev/log    local0
        #log /dev/log    local1 notice
        log stdout format raw local0
        #chroot /var/lib/haproxy
        #stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        #user haproxy
        #group haproxy
        #daemon
 
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private
 
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3
 
defaults
        log     global
        default-server init-addr none
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /usr/local/etc/haproxy/errors/400.http
        errorfile 403 /usr/local/etc/haproxy/errors/403.http
        errorfile 408 /usr/local/etc/haproxy/errors/408.http
        errorfile 500 /usr/local/etc/haproxy/errors/500.http
        errorfile 502 /usr/local/etc/haproxy/errors/502.http
        errorfile 503 /usr/local/etc/haproxy/errors/503.http
        errorfile 504 /usr/local/etc/haproxy/errors/504.http
 

resolvers docker_resolver
   nameserver dns 127.0.0.1:53
   hold valid 1s

frontend http_front
   bind *:80
   bind *:443 ssl crt /etc/ssl/webserver/wildcard.cert.pem
   stats uri /haproxy?stats
   option forwardfor
   http-request redirect scheme https unless { ssl_fc }
   default_backend http_back
 


backend http_back
   #balance roundrobin
   balance leastconn
   cookie SERVERUSED insert indirect nocache
   server nc-web01 nc-web01:80 resolvers docker_resolver check
   server nc-web02 nc-web02:80 resolvers docker_resolver check
   server nc-web03 nc-web03:80 resolvers docker_resolver check
   server nc-web04 nc-web04:80 resolvers docker_resolver check 


 
# WEBSRV01
 
frontend http_setup_front_1
   bind *:4441 ssl crt /etc/ssl/webserver/wildcard.cert.pem
   option forwardfor
   default_backend http_setup_back_1
 
backend http_setup_back_1
   balance leastconn
   cookie SERVERUSED insert indirect nocache
   server nc-web01 nc-web01:80 resolvers docker_resolver check

 
# WEBSRV02
 
frontend http_setup_front_2
   bind *:4442 ssl crt /etc/ssl/webserver/wildcard.cert.pem
   option forwardfor
   default_backend http_setup_back_2
 
backend http_setup_back_2
   balance leastconn
   cookie SERVERUSED insert indirect nocache
   server nc-web02 nc-web02:80 resolvers docker_resolver check

 
# WEBSRV03
 
frontend http_setup_front_3
   bind *:4443 ssl crt /etc/ssl/webserver/wildcard.cert.pem
   option forwardfor
   default_backend http_setup_back_3
 
backend http_setup_back_3
   balance leastconn
   cookie SERVERUSED insert indirect nocache
   server nc-web03 nc-web03:80 resolvers docker_resolver check
 
# WEBSRV04
 
frontend http_setup_front_4
   bind *:4444 ssl crt /etc/ssl/webserver/wildcard.cert.pem
   option forwardfor
   default_backend http_setup_back_4
 
backend http_setup_back_4
   balance leastconn
   cookie SERVERUSED insert indirect nocache
   server nc-web04 nc-web04:80 resolvers docker_resolver check
